plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    // El plugin de Flutter siempre √∫ltimo
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"  // üëà para Firebase
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace "com.example.docya_app"
    compileSdk flutter.compileSdkVersion

    // üëá Forzamos la versi√≥n de NDK recomendada
    ndkVersion "25.1.8937393"

    compileOptions {
        // Usamos Java 17 porque est√° en gradle.properties
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        applicationId "com.example.docya_app"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // ‚ö†Ô∏è despu√©s configur√° tu keystore real para publicar
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source "../.."
}
